_target_: src.data.scannet.datamodule.ScanNetDataModule

train_dataset:
  _target_: src.data.scannet.dataset.ScanNetDataset
  _partial_: true
  data_dir: /datasets/scannet_hf
  caption_dir: /datasets/scannet_captions/results_ours_ram++
  view_sample_ratio: 0.2
  split: train
  repeat: 4
  transforms:
    - type: Copy
      keys_dict:
        coord: origin_coord
    - type: MeanShift
    - type: RandomFlip
      p: 0.5
    - type: RandomRotate
      p: 1.0
      angle: [-1, 1]
      center: [0, 0, 0]
      axis: z
    - type: ChromaticJitter
      p: 1.0
      std: 0.007
    - type: ElasticDistortion
      distortion_params: [[0.12, 0.8], [0.4, 3.2]]
    - type: SphereCrop
      point_max: 250000
      mode: random
    # - type: GridSample
    #   grid_size: 0.02
    #   hash_type: fnv
    #   mode: train
    #   keys: ["coord", "color", "segment", "instance", "binary"]
    #   return_grid_coord: True
    #   return_inverse: True
    - type: NormalizeColor
    - type: ToTensor
    - type: Collect
      keys: [
          "origin_coord",
          # "grid_coord",
          "coord",
          "color",
          "segment",
          "instance",
          "binary",
          "caption_data",
          "origin_idx",
          "pc_count",
          # "inverse",
        ]
      offset_keys_dict:
        offset: coord
      feats_keys: ["color", "coord"]
  base_class_idx: [0, 1, 2, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18]
  ignore_class_idx: [19]
  novel_class_idx: [5, 9, 12, 16]
  ignore_label: -100

val_dataset:
  _target_: src.data.scannet.dataset.ScanNetDataset
  _partial_: true
  data_dir: /datasets/scannet_hf
  caption_dir: /datasets/scannet_captions
  base_class_idx: ${data.train_dataset.base_class_idx}
  ignore_class_idx: ${data.train_dataset.ignore_class_idx}
  novel_class_idx: ${data.train_dataset.novel_class_idx}
  ignore_label: ${data.train_dataset.ignore_label}
  # _target_: src.data.regionplc.dataset.RegionPLCDataset
  # data_dir: /home/junhal/datasets/regionplc
  split: val
  transforms:
    - type: Copy
      keys_dict:
        coord: origin_coord
    - type: MeanShift
    # - type: GridSample
    #   grid_size: 0.02
    #   hash_type: fnv
    #   mode: train
    #   keys: ["coord", "color", "segment", "instance", "binary"]
    #   return_grid_coord: True
    #   return_inverse: True
    - type: NormalizeColor
    - type: ToTensor
    - type: Collect
      keys: [
          "origin_coord",
          # "grid_coord",
          "coord",
          "color",
          "segment",
          "instance",
          "binary",
          "origin_idx",
          "pc_count",
          # "inverse",
        ]
      offset_keys_dict:
        offset: coord
      feats_keys: ["color", "coord"]
collate_fn:
  _target_: src.data.collate.point_collate_regionplc_fn
  _partial_: true
  grid_size: 0.02
batch_size: 4
num_workers: 2
