_target_: src.data.datamodule.MultiDataModule

train_dataset:
  _target_: src.data.concat_dataset.ConcatDataset
  _partial_: true
  ignore_label: -100
  conditions: ["ScanNet"]
  repeat: 1
  datasets:
    - _target_: src.data.embodiedscan.dataset.EmbodiedScanDataset
      _partial_: true
      data_dir: /datasets/mmscan_data/embodiedscan_split/embodiedscan-v1
      split: train
      object_num_max: 300
      ignore_label: ${data.train_dataset.ignore_label}
      repeat: 1
      transforms:
        - type: Copy
          keys_dict:
            coord: origin_coord
        - type: CenterShift
          apply_z: true
        - type: RandomRotate
          p: 0.5
          angle: [-1, 1]
          center: [0, 0, 0]
          axis: "z"
        - type: RandomRotate
          p: 0.5
          angle: [-0.015625, 0.015625]
          axis: "x"
        - type: RandomRotate
          p: 0.5
          angle: [-0.015625, 0.015625]
          axis: "y"
        - type: RandomScale
          scale: [0.9, 1.1]
        - type: RandomFlip
          p: 0.5
        - type: RandomJitter
          sigma: 0.005
          clip: 0.02
        - type: ElasticDistortion
        - type: ChromaticAutoContrast
          p: 0.2
        - type: ChromaticTranslation
          p: 0.95
          ratio: 0.05
        - type: ChromaticJitter
          p: 0.95
          std: 0.05
        - type: SphereCrop
          point_max: 250000
          mode: captioned
        - type: CenterShift
          apply_z: false
        - type: NormalizeColor
        - type: Add
          keys_dict:
            condition: ScanNet
        - type: ToTensor
        - type: Collect
          keys:
            [
              "origin_coord",
              "coord",
              "color",
              "segment",
              "binary",
              "caption_data",
              "origin_idx",
              "condition",
            ]
          offset_keys_dict:
            offset: coord
            pc_count: origin_coord
          feat_keys: ["color"]

val_datasets:
  - _target_: src.data.scannet.dataset.ScanNetDataset
    _partial_: true
    data_dir: /datasets/scannet_hf
    split: val
    log_postfix: scannet20
    ignore_class_idx: [19] # otherfurniture
    ignore_label: ${data.train_dataset.ignore_label}
    transforms:
      - type: Copy
        keys_dict:
          coord: origin_coord
      - type: CenterShift
        apply_z: true
      - type: NormalizeColor
      - type: Add
        keys_dict:
          condition: ScanNet
      - type: ToTensor
      - type: Collect
        keys:
          [
            "origin_coord",
            "coord",
            "color",
            "segment",
            "instance",
            "binary",
            "caption_data",
            "origin_idx",
            "condition",
          ]
        offset_keys_dict:
          offset: coord
          pc_count: origin_coord
        feat_keys: ["color"]

  - _target_: src.data.scannet.dataset.ScanNet200Dataset
    _partial_: true
    data_dir: /datasets/scannet_hf
    split: val
    log_postfix: scannet200
    mask_dir: /datasets/scannet_masks/mask3d_scannet200_openins3d
    ignore_label: ${data.train_dataset.ignore_label}
    transforms:
      - type: Copy
        keys_dict:
          coord: origin_coord
      - type: CenterShift
        apply_z: true
      - type: NormalizeColor
      - type: Add
        keys_dict:
          condition: ScanNet
      - type: ToTensor
      - type: Collect
        keys:
          [
            "origin_coord",
            "coord",
            "color",
            "segment",
            "instance",
            "binary",
            "caption_data",
            "origin_idx",
            "condition",
          ]
        offset_keys_dict:
          offset: coord
          pc_count: origin_coord
        feat_keys: ["color"]

collate_fn:
  _target_: src.data.collate.point_collate_fn_with_masks
  _partial_: true
  grid_size: 0.02

batch_size: 4
num_workers: 8
in_channel: 3

checkpoint_monitor: "val_scannet200/miou"
